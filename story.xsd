<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	attributeFormDefault="unqualified" elementFormDefault="qualified"
	xmlns:html="http://www.w3.org/1999/xhtml"
    xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" vc:minVersion="1.1"  >
	<xs:element name="story">
		<xs:complexType>
			<xs:sequence>
				<xs:element type="androidDrawable" name="background" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Background of story</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element type="xs:int" name="version" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Version of story</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:sequence>
					<xs:element type="includeType" name="include" minOccurs="0" maxOccurs="unbounded" />
				</xs:sequence>
				<xs:element type="charactersType" name="characters"  minOccurs="0" />
				<xs:element type="enemiesType" name="enemies"  minOccurs="0" />
				<xs:element type="sectionsType" name="sections"  minOccurs="0" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="bonusState">
		<xs:restriction base="xs:string">
			<xs:enumeration value="before_fight">
				<xs:annotation>
					<xs:documentation>
						Bonus will be applied before fight.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="after_fight">
				<xs:annotation>
					<xs:documentation>
						Bonus will be applied after fight.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="normal">
				<xs:annotation>
					<xs:documentation>
						<html:p>Default value.</html:p>
						<html:p>When section has enemies this bonus will be ignored.</html:p>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="attrType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="health" />
			<xs:enumeration value="defense" />
			<xs:enumeration value="luck" />
			<xs:enumeration value="skill" />
			<xs:enumeration value="attack" />
			<xs:enumeration value="damage" />
			<xs:enumeration value="skillpower" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="enemyLevelType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="boss" />
			<xs:enumeration value="minion" />
			<xs:enumeration value="creature" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="specialAttackType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="decrease_health_greater" />
			<xs:enumeration value="decrease_health_greater_overtime" />
			<xs:enumeration value="increase_attack" />
			<xs:enumeration value="life_leech" />
			<xs:enumeration value="increase_skill" />
			<xs:enumeration value="increase_health_greater_overtime" />
			<xs:enumeration value="increase_health" />
			<xs:enumeration value="cancel_positive" />
			<xs:enumeration value="increase_health_greater" />
			<xs:enumeration value="twice_attack" />
			<xs:enumeration value="quick_reaction" />
			<xs:enumeration value="decrease_health" />
			<xs:enumeration value="increase_defense" />
			<xs:enumeration value="decrease_skill" />
			<xs:enumeration value="increase_health_overtime" />
			<xs:enumeration value="decrease_attack" />
			<xs:enumeration value="decrease_health_overtime" />
			<xs:enumeration value="reflect_damage" />
			<xs:enumeration value="decrease_defense" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="androidDrawable">
		<xs:annotation>
			<xs:documentation>
				Text is android string reference and must have format "@drawable/([a-zA-Z0-9/_])*".
				<html:p>Example:</html:p>
				@drawable/any_image_in_app
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="@drawable/([a-zA-Z0-9/_])*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="skillsType">
		<xs:sequence>
			<xs:element type="skillType" name="skill" maxOccurs="unbounded" minOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="skillType">
		<xs:attribute type="specialAttackType" name="name" use="required"/>
		<xs:attribute type="xs:int" name="levelRequired" use="required"/>
	</xs:complexType>
	<xs:complexType name="characterType">
		<xs:sequence>
			<xs:element type="skillsType" name="skills" maxOccurs="1" minOccurs="1">
				<xs:annotation>
					<xs:documentation>Section of story</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element type="attrType" name="primaryStat" />
			<xs:element type="xs:int" name="health" />
			<xs:element type="xs:int" name="defense" />
			<xs:element type="xs:int" name="skill" />
			<xs:element type="xs:int" name="luck" />
			<xs:element type="xs:int" name="attack" />
			<xs:element type="xs:int" name="baseDamage" minOccurs="0" maxOccurs="1"/>
			<xs:element type="xs:int" name="skillPower" />
		</xs:sequence>
		<xs:attribute type="xs:int" name="position" use="required">
			<xs:annotation>
				<xs:documentation>Start section position of character
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:int" name="id" use="required" />
		<xs:attribute type="xs:string" name="name" use="required">
			<xs:annotation>
				<xs:documentation>Name of character</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="description" use="required">
			<xs:annotation>
				<xs:documentation>Description of character</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="charactersType">
		<xs:sequence>
			<xs:element type="characterType" name="character" maxOccurs="unbounded" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="includeType">
		<xs:attribute type="xs:string" name="name" use="required" />
	</xs:complexType>
	<xs:complexType name="bonusType">
		<xs:attribute type="attrType" name="type" use="optional" />
		<xs:attribute type="xs:boolean" name="base" use="optional" />
		<xs:attribute type="xs:int" name="value" use="optional" />
		<xs:attribute type="xs:boolean" name="permanent" use="optional">
			<xs:annotation>
				<xs:documentation>
					Default is TRUE. Non permament bonuses works only when fighting.
					Before battle will be added and after fight will be removed.
					When permanent is false, then bonusState is ignored.
					When stats are removed while bonus is not permanent then stats are not overflow value before bonus application.
					Ex.: Skill before fight is 5, nonpermanent bonus is 20 but character can have only max 20 skill.
					After fight skill will be returned to 5.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="debuff" use="optional" >
			<xs:annotation>
				<xs:documentation>
					This bonus has negative effect.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="bonusState" name="state" use="optional" >
			<xs:annotation>
				<xs:documentation>
					Define when bonus will be aplied.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="overflowed" use="optional" >
			<xs:annotation>
				<xs:documentation>
					This bonus can overflow character default attribute.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="bonusesType">
		<xs:sequence>
			<xs:element type="bonusType" name="bonus" maxOccurs="unbounded"
				minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="refType">
		<xs:attribute type="xs:string" name="value" use="required" />
		<xs:attribute type="specialAttackType" name="overrideSkill" use="optional" />
		<xs:attribute type="xs:float" name="xpcoeff" use="optional" />
	</xs:complexType>
	<xs:complexType name="enemiesRefType">
		<xs:sequence>
			<xs:element type="refType" name="ref" maxOccurs="unbounded"
				minOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="enemyType">
		<xs:sequence>
			<xs:element type="skillsType" name="skills" maxOccurs="1" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Section of story</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element type="xs:int" name="skillPower" minOccurs="0"/>
			<xs:element type="xs:int" name="health" />
			<xs:element type="xs:int" name="defense" />
			<xs:element type="xs:int" name="skill" />
			<xs:element type="xs:int" name="luck" />
			<xs:element type="xs:int" name="attack" />
		</xs:sequence>
		<xs:attribute type="xs:string" name="name" use="required" />
		<xs:attribute type="xs:float" name="xpcoeff" use="optional" />
		<xs:attribute type="enemyLevelType" name="type" use="optional" />
		<xs:attribute type="xs:string" name="id" use="required" />
	</xs:complexType>
	<xs:complexType name="enemiesType">
		<xs:sequence>
			<xs:element type="enemyType" name="enemy" maxOccurs="unbounded"
				minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="optionType">
				<xs:attribute type="xs:int" name="section" use="required">
					<xs:annotation>
						<xs:documentation>Position of next section.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute type="xs:string" name="text" use="required">
					<xs:annotation>
						<xs:documentation>Text is android string reference and must have format "@string/text".</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute type="xs:boolean" name="disableWhenSelected" use="optional">
					<xs:annotation>
						<xs:documentation>
							This option will be disabled when is selected. 
							<html:p>(For example when player returns from "dangerous" section.)</html:p>
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute type="xs:boolean" name="luckAspect" use="optional">
					<xs:annotation>
						<xs:documentation>This option will be displayed only when character has luck. </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute type="xs:int" name="skill" use="optional">
					<xs:annotation>
						<xs:documentation>Required skill of character for display this option. </xs:documentation>
					</xs:annotation>
				</xs:attribute>
	</xs:complexType>
	<xs:complexType name="optionsType">
		<xs:sequence>
			<xs:element type="optionType" name="option" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="sectionType" mixed="false">
		<xs:sequence>
			<xs:element type="bonusesType" name="bonuses" minOccurs="0" />
			<xs:element type="enemiesRefType" name="enemies" minOccurs="0" />
			<xs:element type="optionsType" name="options" minOccurs="0" />
		</xs:sequence>
		<xs:attribute type="xs:int" name="level" use="optional" />
		<xs:attribute type="xs:boolean" name="resetAttributes" use="optional" />
		<xs:attribute type="xs:boolean" name="resetPositiveAttributes" use="optional" />
		<xs:attribute type="xs:boolean" name="resetNegativeAttributes" use="optional" />
		<xs:attribute type="xs:float" name="xpcoeff" use="optional" />
		<xs:attribute type="xs:int" name="position" use="required" />
		<xs:attribute type="xs:float" name="scoreMultiplier" use="optional">
			<xs:annotation>
				<xs:documentation>This attribute is used only when attribute winSection="true".</xs:documentation>
			</xs:annotation>
		</xs:attribute>	
		
		<xs:attribute type="xs:string" name="alreadyVisitedText" use="optional">
			<xs:annotation>
				<xs:documentation>Text will be displayed when player already visited section. Default value is standard text.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="text" use="required">
			<xs:annotation>
				<xs:documentation>Part of text of story.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="luckDefeatEnemies" use="optional">
			<xs:annotation>
				<xs:documentation>If player has luck, then enemies are defeated.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="enemiesDefeatedText"
			use="optional">
			<xs:annotation>
				<xs:documentation>Text will shown when player defeated all enemies
					(this is required when enemies are defined).</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="luckText" use="optional">
			<xs:annotation>
				<xs:documentation>Text will shown when player has luck and avoid combat.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="loseSection" use="optional">
			<xs:annotation>
				<xs:documentation>Indicates this is end of game (last section).
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:boolean" name="winSection" use="optional">
			<xs:annotation>
				<xs:documentation>Indicates this is end of game (last section).
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="sectionsType">
		<xs:sequence>
			<xs:element type="sectionType" name="section" maxOccurs="unbounded" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Section of story</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
	
</xs:schema>
